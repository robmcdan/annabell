#include "ExploitCommand.h"

ExploitCommand::ExploitCommand() :
		Command() {
}

int ExploitCommand::doExecute() {
	if (input_token.size() > 1) {
		string target_phrase;
		target_phrase = input_token[1];
		for (unsigned int itk = 2; itk < input_token.size(); itk++) {
			target_phrase = target_phrase + " " + input_token[itk];
		}
		if (annabell->flags->AnswerTimePhrase == "")
			annabell->flags->AnswerTimePhrase = target_phrase;
		ExecuteAct(annabell, Mon, STORE_ST_A, NULL_ACT, FLUSH_OUT);
		GetInputPhrase(annabell, Mon, target_phrase);
	}
	//VerboseFlag = true;
	//string out_phrase=ExploitationTest(annabell, Mon, 1);
	annabell->flags->OutPhrase = Exploitation(annabell, Mon, Display, 1);
	annabell->flags->CompleteOutputFlag = true;
	//VerboseFlag = false;
	// check if the output is a sensorymotor command
	CheckSensoryMotor(annabell->flags->OutPhrase, annabell, Display);

	return 0;
}
